@{
  Layout = "_Layout";
}

@model Treats.Models.Order

@{
  decimal grandTotal = 0;
}
<div class="mainBox">
  <h2>Order Details</h2>
  <hr />
  <h3>User: @User.Identity.Name</h3>
  <h3>Order Name: @Html.DisplayFor(model => model.OrderName) </h3>
  <h4>Order Description: @Html.DisplayFor(model => model.OrderDescription)</h4>
  
  <hr />
  @if (@Model.Treats.Count == 0)
{
  <p>This order does not include any Treats.</p>
}
else
{
  <h3>Treats included in this order:</h3>
  <ul>
    @foreach (var join in Model.Treats)
    {
      
      
      
      @using (Html.BeginForm("DeleteTreat", "Orders"))
      {
      <li>@Html.ActionLink($"{join.Treat.TreatName} (${join.Treat.TreatPrice.ToString("0.00")}) ea.", "Details", "Treats", new { id = join.Treat.TreatId }) | Quantity x @join.TreatQuantity | Subtotal: $@((join.TreatQuantity*join.Treat.TreatPrice).ToString("0.00"))   <input type="submit" value="Remove" class="btn btn-warning btn-sm" /> </li>
      @Html.Hidden("OrderId", @join.OrderId)
      @Html.Hidden("joinId", @join.OrderTreatId)      
      }
      grandTotal += join.TreatQuantity*join.Treat.TreatPrice;
    }
  </ul>  
}
  <hr />
  <p></p><strong></strong>Order Grand Total: $@grandTotal.ToString("0.00")</strong></p>
  <hr />
  <p>@Html.ActionLink("Add Treat to Order", "AddTreat", null, new { id = Model.OrderId }, new { @class = "btn btn-info btn-sm" })</p>
  <p>@Html.ActionLink("Edit Order", "Edit", null, new { id = Model.OrderId }, new { @class = "btn btn-info btn-sm" })</p>
  <p>@Html.ActionLink("Delete Order", "Delete", null, new { id = Model.OrderId }, new { @class = "btn btn-info btn-sm" })</p>
  <p>@Html.ActionLink("Back to Order List", "Index",null, null, new { @class = "btn btn-info btn-sm" })</p>
</div>